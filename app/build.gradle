apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.novoda.build-properties'
apply plugin: 'io.fabric'

buildProperties {
    secrets {
        using rootProject.file('properties/secrets.properties')
    }
    env {
        using System.getenv()
    }
}

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "net.aiscope.gdd_app"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 5
        versionName "1.1.0-alpha02"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigString 'AWS_ACCESS', buildProperties.secrets['AWS_ACCESS'].or(buildProperties.env['AWS_ACCESS']).or("")
        buildConfigString 'AWS_SECRET', buildProperties.secrets['AWS_SECRET'].or(buildProperties.env['AWS_SECRET']).or("")
        buildConfigString 'S3_BUCKET', buildProperties.secrets['S3_BUCKET'].or(buildProperties.env['S3_BUCKET']).or("")
        buildConfigString 'SMARTLOOK_API_KEY', buildProperties.secrets['SMARTLOOK_API_KEY'].or(buildProperties.env['SMARTLOOK_API_KEY']).or("")
    }

    signingConfigs {
        release {
            storeFile file("../gdd.jks")
            keyAlias 'gdd'
            storePassword buildProperties.secrets['STORE_PW'].or(buildProperties.env['STORE_PW']).or("").string
            keyPassword buildProperties.secrets['KEY_PW'].or(buildProperties.env['KEY_PW']).or("").string
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            ext.enableCrashlytics = false
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        animationsDisabled = true
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

detekt {
    toolVersion = "1.1.1"
    input = files("src/main/java")
    config = files("$rootProject.projectDir/detekt-config.yml")
    buildUponDefaultConfig = true
    filters = ".*/res/.*,.*/build/.*"
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.karumi:dexter:5.0.0'
    implementation 'com.github.salomonbrys.kotson:kotson:2.5.0'
    implementation 'com.amazonaws:aws-android-sdk-s3:2.15.2'
    implementation 'androidx.work:work-runtime-ktx:2.2.0'

    // Firebase
    implementation 'com.google.firebase:firebase-analytics:17.2.0'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    // Smartlook – screen recording
    implementation 'com.smartlook.recording:app:1.1.2-native'

    // Timber – logging
    implementation 'com.jakewharton.timber:timber:4.7.1'


    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'

    androidTestImplementation 'com.github.fabioCollini.daggermock:daggermock:0.8.5'
    androidTestImplementation 'com.github.fabioCollini.daggermock:daggermock-kotlin:0.8.5'

//    androidTestImplementation 'com.github.tmurakami:dexopener:2.0.3'
//    androidTestImplementation "org.mockito:mockito-inline:$mockito_version"
//    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    androidTestImplementation('com.nhaarman:mockito-kotlin:1.6.0') {
        exclude group: 'org.jetbrains.kotlin'
    }
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito-inline:$mockito_version"


    // Test
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito:mockito-inline:$mockito_version"
    testImplementation 'com.nhaarman:mockito-kotlin:1.6.0'

    // Capture - FotoApparat
    implementation 'io.fotoapparat:fotoapparat:2.7.0'


    // Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    compileOnly 'javax.annotation:jsr250-api:1.0'
}

apply plugin: 'com.google.gms.google-services'
